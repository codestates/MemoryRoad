openapi: 3.0.0
info:
  version: 1.0.0
  title: Memory-Road API docs
  description: Memory-Road의 API 문서입니다
  license:
    name: MIT
servers:
  - url: 'http://localhost:80/'
paths:
  /users:
    post:
      tags:
        - users
      summary: 회원 가입
      responses:
        '201':
          description: 회원 가입 성공
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 회원 가입 성공
        '400':
          description: '이미 있는 이메일, 혹은 닉네임인 경우'
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: 사용중인 이메일입니다. / 사용중인 닉네임입니다.
        '401':
          description: 쿠키 전달 실패
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: 쿠키 재요청이 필요합니다
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: 이메일
                  type: string
                  example: abc@naver.com
                password:
                  description: 비밀 번호
                  type: string
                  example: password
                nickName:
                  description: 닉네임
                  type: string
                  example: 김사과
    delete:
      tags:
        - users
      summary: 회원 탈퇴
      responses:
        '200':
          description: 회원 탈퇴 성공
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 회원에서 탈퇴하셨습니다
        '401':
          description: 쿠키 전달 실패
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: 쿠키 재요청이 필요합니다
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
  /users/auth:
    get:
      tags:
        - users
      summary: 로그 아웃
      description: 로그 아웃
      responses:
        '200':
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
        '401':
          description: 쿠키가 없거나 쿠키에 토큰이 없는 경우
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 401
                  error:
                    type: string
                    example: unauthorized
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
  /users/auth/oauth/kakao:
    post:
      tags:
        - users
      summary: 카카오 로그인
      description: 카카오 Oauth 로그인
      responses:
        '200':
          description: 카카오 Oauth 로그인 성공
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    example: 150
                  userName:
                    type: string
                    example: 용가리
                  profile:
                    type: string
                    example: 'http://k.kakaocdn.net/dn/crXJwu/btqUsRhQUx0/cH6CxkKCcteXkkcuRUulx1/img_110x110.jpg'
                  email:
                    type: string
                    example: terrabattle@naver.com
                  oauthLogin:
                    type: string
                    example: naver
        '400':
          description: 이미 사용중인 이메일인 경우
          content:
            application/json:
              schema:
                type: string
                example: 이미 사용중인 이메일입니다
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizationCode:
                  description: URL로 받은 인증 코드
                  type: string
  /users/auth/oauth/google:
    post:
      tags:
        - users
      summary: 구글 로그인
      description: 구글 Oauth 로그인
      responses:
        '200':
          description: 구글 Oauth 로그인 성공
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    example: 103
                  userName:
                    type: string
                    example: 용가리
                  profile:
                    type: string
                    example: 'https://lh3.googleusercontent.com/a/AATXAJwhegjEnASqnjidlgyYC7xzyu4U5jdCPpfV30MT=s96-c'
                  email:
                    type: string
                    example: abc@naver.com
                  oauthLogin:
                    type: string
                    example: google
        '400':
          description: 이미 사용중인 이메일인 경우
          content:
            application/json:
              schema:
                type: string
                example: 이미 사용중인 이메일입니다
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizationCode:
                  description: URL로 받은 인증 코드
                  type: string
  /users/auth/oauth/naver:
    post:
      tags:
        - users
      summary: 네이버 로그인
      description: 네이버 Oauth 로그인
      responses:
        '200':
          description: 네이버 Oauth 로그인 성공
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    example: 111
                  userName:
                    type: string
                    example: 도롱뇽
                  profile:
                    type: string
                    example: 'http://k.kakaocdn.net/dn/crXJwu/btqUsRhQUx0/cH6CxkKCcteXkkcuRUulx1/img_110x110.jpg'
                  email:
                    type: string
                    example: abc@naver.com
                  oauthLogin:
                    type: string
                    example: naver
        '400':
          description: 이미 사용중인 이메일인 경우
          content:
            application/json:
              schema:
                type: string
                example: 이미 사용중인 이메일입니다
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizationCode:
                  description: URL로 받은 인증 코드
                  type: string
  /users/auth/local:
    post:
      tags:
        - users
      summary: 로컬 로그인
      description: 로컬 로그인
      responses:
        '200':
          description: 로컬 로그인 성공
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    example: 102
                  userName:
                    type: string
                    example: 귤
                  profile:
                    type: string
                    example: /upload/1235500011968711.png
                  email:
                    type: string
                    example: abc@naver.com
                  oauthLogin:
                    type: string
                    example: null
        '401':
          description: 잘못된 비밀번호를 입력받은 경우 / 잘못된 이메일을 입력받은 경우
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: 유효하지 않은 이메일입니다 / 비밀번호가 일치하지 않습니다.
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: 이메일
                  type: string
                  example: abc11@naver.com
                password:
                  description: 비밀 번호
                  type: string
                  example: '12345'
  /users/profile:
    patch:
      tags:
        - users
      summary: 유저 프로필 이미지 변경
      description: 유저 프로필 이미지 변경
      responses:
        '200':
          description: 프로필 이미지 변경 성공
          content:
            application/json:
              schema:
                properties:
                  profile:
                    type: string
                    example: /upload/11232145125.png
        '401':
          description: 쿠키 전달 실패
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: 쿠키 재요청이 필요합니다
  /users/user-name:
    patch:
      tags:
        - users
      summary: 유저 닉네임 변경
      description: 유저 닉네임 변경
      responses:
        '200':
          description: 닉네임 변경 성공
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 닉네임이 변경되었습니다
        '401':
          description: 쿠키 전달 실패
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: 쿠키 재요청이 필요합니다
  /users/password:
    patch:
      tags:
        - users
      summary: 유저 비밀번호 변경
      description: 유저 비밀번호 변경
      responses:
        '200':
          description: 비밀번호 변경 성공
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 비밀번호가 변경되었습니다
        '401':
          description: 쿠키 전달 실패
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: 쿠키 재요청이 필요합니다
  /users/auth/local/email:
    post:
      tags:
        - users
      summary: 중복된 이메일 여부를 확인
      description: 중복된 이메일 여부를 확인
      responses:
        '200':
          description: 사용 가능한 이메일
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 사용 가능한 이메일입니다
        '400':
          description: 사용중인 이메일
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: 사용중인 이메일입니다
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: 이메일
                  type: string
                  example: abc11@naver.com
  /users/auth/local/password:
    post:
      tags:
        - users
      summary: 로그인한 유저의 비밀번호 일치여부 확인
      description: 로그인한 유저의 비밀번호 일치여부 확인
      responses:
        '200':
          description: 비밀번호 일치
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 비밀번호가 일치합니다
        '401':
          description: 잘못된 비밀번호를 입력받거나 유효하지 않은 토큰을 받은 경우
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    example: 쿠키 재요청이 필요합니다 / 비밀번호가 일치하지 않습니다
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  description: 비밀 번호
                  type: string
                  example: '12345'
  /routes:
    get:
      tags:
        - routes
      summary: '사용자 루트 조회. 로그인한 사용자의 루트를 조회하거나, 검색어, 필터를 통한 루트들을 요청할 수 있다.'
      description: |
        1. search=true 파라미터가 주어지지 않을 경우, 토큰을 이용해 마이페이지의 루트들을 반환한다. 페이지별로 조회하기 위해 page 파라미터가 필요하다.
        2. search=true 파라미터가 주어지면 두 가지 경우로 나뉜다. \
           2.1 검색을 하지 않고 화면의 위도, 경도 안에 해당되는 루트들을 불러올 때(nwLat, nwLng, seLat, seLng파라미터가 필요하다.) <br> 2.2 루트, 장소별로 검색을 한 뒤, location, time으로 필터링 할 수 있다. (이 경우 page파라미터가 필요하다. 위도, 경도의 정보는 사용하지 않는다.)
      parameters:
        - name: page
          in: query
          description: 페이지 요청
          schema:
            type: integer
        - name: search
          in: query
          description: true로 값을 줄 경우 다른 파라미터들을 받아 검색에 활용할 수 있다.
          schema:
            type: boolean
        - name: nwLat
          in: query
          description: 화면의 북서쪽 위도
          schema:
            type: number
        - name: nwLng
          in: query
          description: 화면의 북서쪽 경도
          schema:
            type: number
        - name: seLat
          in: query
          description: 화면의 남동쪽 위도 정보
          schema:
            type: number
        - name: seLng
          in: query
          description: 화면의 남동쪽 경도 정보
          schema:
            type: number
        - name: rq
          in: query
          description: 루트명 검색어
          schema:
            type: string
        - name: lq
          in: query
          description: 장소명 검색어
          schema:
            type: string
        - name: location
          in: query
          description: 지역 선택
          schema:
            type: string
        - name: time
          in: query
          description: 시간 선택
          schema:
            type: integer
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  routes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Route'
                  count:
                    type: integer
                    description: 총 루트의 개수
                    example: 1
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
    post:
      tags:
        - routes
      summary: '루트 최초 생성. 루트와 핀, 사진들의 정보를 전달 받는다.'
      description: 루트 생성
      responses:
        '201':
          description: 추가 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: created
        '400':
          description: 잘못된 형식의 요청을 받은 경우
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: bad img type | Bad Request
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                '0':
                  type: file
                  description: ranking이 0인 핀의 사진들
                '1':
                  type: file
                  description: ranking이 1인 핀의 사진들
                route:
                  type: string
                  description: '루트, 핀들의 정보'
                  example:
                    routeName: 국밥 탐방
                    description: 시청 근처 국밥
                    public: true
                    color: red
                    time: 3
                    date: 2020-3-4
                    pins:
                      - ranking: 0
                        locationName: ' 뼈다귀 국밥'
                        latitude: 37.56266863212559
                        longitude: 126.97777432627802
                        lotAddress: 시청앞 지번1
                        roadAddress: 시청앞 도로명1
                        ward: 성북구
                        startTime: '12:00'
                        endTime: '13:00'
                        keywords:
                          - 음식점
                      - ranking: 1
                        locationName: 국밥2
                        latitude: 37.56260929984292
                        longitude: 126.98148873516526
                        lotAddress: 지번2
                        roadAddress: 도로명2
                        ward: 중구
                        startTime: '13:00'
                        endTime: '15:00'
                        keywords:
                          - 국밥
  '/routes/{routesId}':
    get:
      tags:
        - routes
      summary: 해당 루트의 정보와 핀들 조회
      description: 해당 루트의 정보와 핀들 조회
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  route:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: 루트의 아이디
                        example: 1
                      userId:
                        type: integer
                        description: 루트를 생성한 유저의 아이디
                        example: 2
                      routeName:
                        type: string
                        description: 루트의 이름
                        example: 강원도 여행 기록
                      description:
                        type: string
                        description: 루트 설명
                        example: 오늘은 친구들이랑 놀았다.
                      createdAt:
                        type: string
                        format: date-time
                        description: 생성일자
                        example: 2021-12-16T13:28:26.000Z
                      updatedAt:
                        type: string
                        format: date-time
                        description: 갱신일자
                        example: 2021-12-16T13:28:26.000Z
                      public:
                        type: boolean
                        description: 루트의 공개 여부
                        example: false
                      color:
                        type: string
                        description: 루트의 색깔
                        example: red
                      time:
                        type: integer
                        description: 루트의 분 단위 시간
                        example: 120
                      Pins:
                        type: array
                        description: 핀의 간략한 정보
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: 핀의 아이디
                              example: 1
                            ranking:
                              type: integer
                              description: 루트의 순서
                              example: 1
                            locationName:
                              type: string
                              description: 핀의 이름
                              example: 경치 좋은 곳
                            latitude:
                              type: number
                              description: 위도
                              example: 33
                            longitude:
                              type: number
                              description: 경도
                              example: 126
                            lotAddress:
                              type: string
                              description: 핀의 지번 주소
                              example: 지번 주소
                            roadAddress:
                              type: string
                              description: 핀의 도로명 주소
                              example: 도로명 주소
                            ward:
                              type: string
                              description: 핀이 속한 구
                              example: 성북구
                            tooClose:
                              type: boolean
                              description: 다른 핀과 근접 여부
                              example: false
                            startTime:
                              type: string
                              description: 핀의 시작 시간
                              example: '12:00'
                            endTime:
                              type: string
                              description: 핀의 종료 시간
                              example: '13:00'
                            Pictures:
                              type: array
                              description: 핀의 사진 정보들
                              items:
                                type: object
                                properties:
                                  id:
                                    type: numner
                                    description: 사진의 아이디
                                    example: 60
                                  pinId:
                                    type: numner
                                    description: 사진이 속한 핀의 아이디
                                    example: 1
                                  fileName:
                                    type: string
                                    description: 사진 파일명
                                    example: pictureName.gif
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
    patch:
      tags:
        - routes
      summary: '루트 제목, 내용 수정'
      description: '루트 제목, 내용 수정'
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: 수정 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: updated
        '401':
          description: '없는 루트, 또는 다른 유저가 작성한 루트를 업데이트 하려는 경우'
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                routeName:
                  description: 루트 제목
                  type: string
                  example: 루트 제목
                description:
                  description: 루트 설명
                  type: string
                  example: 루트 설명
                public:
                  description: 루트 공개 여부
                  type: boolean
                  example: false
                color:
                  description: 루트 색깔
                  type: string
                  example: red
                time:
                  description: 루트 시간
                  type: number
                  example: 5
    delete:
      tags:
        - routes
      summary: 루트 삭제
      description: 루트 삭제
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: deleted
        '401':
          description: '없는 루트, 또는 다른 유저가 작성한 루트를 삭제 하려는 경우'
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
  '/routes/{routesId}/pins':
    post:
      tags:
        - routes
      summary: 해당 루트에 핀을 새로 생성한다.
      description: 해당 루트에 핀을 새로 생성한다.
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: 생성 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: created
        '400':
          description: 잘못된 형식의 요청
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: bad img type | Bad Request
        '401':
          description: 루트를 수정할 권한이 없는 경우
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 핀의 정보들
                  example:
                    ranking: 2
                    locationName: 핀이름
                    lotAddress: 지번 주소
                    roadAddress: 도로명 주소
                    ward: 구
                    latitude: 12.123
                    longitude: 123.123
                    startTime: 1
                    endTime: 2
                files:
                  type: file
                  description: 핀의 사진들
  '/routes/{routesId}/pins/{pinId}':
    patch:
      tags:
        - routes
      summary: 핀 카드 수정
      description: 핀 카드 수정
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
        - name: pinId
          in: path
          description: 핀의 아이디
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: updated
        '401':
          description: '없는 핀, 또는 다른 유저가 작성한 핀을 업데이트 하려는 경우'
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 핀의 정보들
                  example:
                    ranking: 1
                    locationName: 새로운 핀이름
                    lotAddress: 새로운 지번 주소
                    roadAddress: 새로운 도로명 주소
                    ward: 새로운 구
                    latitude: 12.123
                    longitude: 123.123
                    startTime: 1
                    endTime: 2
                files:
                  type: file
                  description: 핀의 사진들. 기존 사진의 삭제는 다른 엔드포인트에 요청해야 한다.
    delete:
      tags:
        - routes
      summary: pin 카드 삭제
      description: pin 카드 삭제
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
        - name: pinId
          in: path
          description: 핀의 아이디
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: deleted
        '401':
          description: '없는 핀, 또는 다른 유저가 작성한 핀을 삭제 하려는 경우'
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
  '/routes/{routesId}/pins/{pinId}/pictures/{pictureId}':
    delete:
      tags:
        - routes
      summary: 핀의 사진 삭제
      description: 핀의 사진 삭제
      parameters:
        - name: routeId
          in: path
          description: 루트의 아이디
          required: true
          schema:
            type: integer
        - name: pinId
          in: path
          description: 핀의 아이디
          required: true
          schema:
            type: integer
        - name: pictureId
          in: path
          description: 사진의 아이디
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: deleted
        '401':
          description: '없는 사진, 또는 다른 유저가 업로드한 사진을 삭제 하려는 경우'
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: unauthorized
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/responses/ServerErr'
  /wards:
    get:
      tags:
        - wards
      summary: 구역 구분 요청
      description: 법정동 코드로 구분
      responses:
        '200':
          description: 각 구역별 루트 개수를 전달해준다.
          content:
            application/json:
              schema:
                properties:
                  wards:
                    type: array
                    items:
                      properties:
                        id:
                          type: string
                          description: 구 이름
                          example: 성북구
                        routesNumber:
                          type: integer
                          description: 해당 법정동에 포함되는 루트의 수
                          example: 30
                  message:
                    type: string
                    example: 잘 전달되었습니다.
components:
  schemas:
    Route:
      type: object
      properties:
        id:
          type: integer
          description: 루트의 아이디
          example: 1
        userId:
          type: integer
          description: 루트를 생성한 유저의 아이디
          example: 2
        routeName:
          type: string
          description: 루트의 이름
          example: 강원도 여행 기록
        description:
          type: string
          description: 루트 설명
          example: 오늘은 친구들이랑 놀았다.
        createdAt:
          type: string
          format: date-time
          description: 생성일자
          example: 2021-12-16T13:28:26.000Z
        updatedAt:
          type: string
          format: date-time
          description: 갱신일자
          example: 2021-12-16T13:28:26.000Z
        public:
          type: boolean
          description: 루트의 공개 여부
          example: false
        color:
          type: string
          description: 루트의 색깔
          example: red
        time:
          type: integer
          description: 루트의 분 단위 시간
          example: 120
        Pins:
          type: array
          description: 핀의 간략한 정보
          items:
            type: object
            properties:
              id:
                type: integer
                description: 핀의 아이디
                example: 1
              ranking:
                type: integer
                description: 루트의 순서
                example: 1
              locationName:
                type: string
                description: 핀의 이름
                example: 경치 좋은 곳
              latitude:
                type: number
                description: 위도
                example: 33
              longitude:
                type: number
                description: 경도
                example: 126
              lotAddress:
                type: string
                description: 핀의 지번 주소
                example: 지번 주소
              roadAddress:
                type: string
                description: 핀의 도로명 주소
                example: 도로명 주소
              ward:
                type: string
                description: 핀이 속한 구
                example: 성북구
              tooClose:
                type: boolean
                description: 다른 핀과 근접 여부
                example: false
              startTime:
                type: string
                description: 핀의 시작 시간
                example: '12:00'
              endTime:
                type: string
                description: 핀의 종료 시간
                example: '13:00'
              Pictures:
                type: array
                description: 핀의 사진 정보들
                items:
                  type: object
                  properties:
                    id:
                      type: numner
                      description: 사진의 아이디
                      example: 60
                    pinId:
                      type: numner
                      description: 사진이 속한 핀의 아이디
                      example: 1
                    fileName:
                      type: string
                      description: 사진 파일명
                      example: pictureName.gif
        thumbnail:
          type: string
          description: '루트의 대표 사진파일 제목. 핀중 가장 앞 사진을 가져오며, 사진이 없을 경우 null값이 할당되어 있다.'
          example: pictureName.gif
    Pin:
      type: object
      properties:
        id:
          type: integer
          description: 핀의 아이디
          example: 1
        routesId:
          type: integer
          description: 핀이 속한 루트의 아이디
          example: 2
        ranking:
          type: integer
          description: 핀의 순서
          example: 0
        locationName:
          type: string
          description: 핀의 이름
          example: 경치 좋은 곳
        latitude:
          type: number
          description: 위도
          example: 33
        longitude:
          type: number
          description: 경도
          example: 126
        lotAddress:
          type: string
          description: 핀의 지번 주소
          example: 지번 주소
        roadAddress:
          type: string
          description: 핀의 도로명 주소
          example: 도로명 주소
        ward:
          type: string
          description: 핀이 속한 구
          example: 성북구
        tooClose:
          type: boolean
          description: 다른 핀과 근접 여부
          example: false
        startTime:
          type: string
          description: 핀의 시작 시간
          example: '12:00'
        endTime:
          type: string
          description: 핀의 종료 시간
          example: '13:00'
        Pictures:
          type: array
          description: 핀의 사진 정보들
          items:
            type: object
            properties:
              id:
                type: number
                description: 사진 파일의 id
                example: 30
              pinId:
                type: number
                description: 사진이 속한 핀의 id
                example: 1
              fileName:
                type: string
                description: 사진 파일명
                example: pictureName.gif
  responses:
    ServerErr:
      type: object
      properties:
        code:
          type: integer
          description: http status code
          example: 500
        error:
          type: string
          description: server error description
          example: server error
